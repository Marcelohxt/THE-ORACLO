# Generated by Django 5.2.3 on 2025-06-20 18:34

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('slug', models.SlugField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True)),
                ('color', models.CharField(default='#007bff', max_length=7)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name_plural': 'Categories',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Article',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('title', models.CharField(max_length=500)),
                ('content', models.TextField()),
                ('summary', models.TextField(blank=True)),
                ('url', models.URLField(max_length=1000, unique=True)),
                ('author', models.CharField(blank=True, max_length=200)),
                ('published_date', models.DateTimeField(blank=True, null=True)),
                ('collected_date', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(choices=[('collected', 'Coletado'), ('processed', 'Processado'), ('analyzed', 'Analisado'), ('published', 'Publicado'), ('archived', 'Arquivado')], default='collected', max_length=20)),
                ('priority', models.CharField(choices=[('low', 'Baixa'), ('medium', 'Média'), ('high', 'Alta'), ('critical', 'Crítica')], default='medium', max_length=20)),
                ('sentiment_score', models.FloatField(blank=True, null=True)),
                ('relevance_score', models.FloatField(blank=True, null=True)),
                ('keywords', models.JSONField(blank=True, default=list)),
                ('entities', models.JSONField(blank=True, default=list)),
                ('views_count', models.IntegerField(default=0)),
                ('shares_count', models.IntegerField(default=0)),
                ('is_breaking_news', models.BooleanField(default=False)),
                ('is_featured', models.BooleanField(default=False)),
                ('is_verified', models.BooleanField(default=False)),
                ('categories', models.ManyToManyField(blank=True, to='core.category')),
            ],
            options={
                'ordering': ['-collected_date'],
            },
        ),
        migrations.CreateModel(
            name='Alert',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('message', models.TextField()),
                ('alert_type', models.CharField(choices=[('breaking_news', 'Notícia de Última Hora'), ('trending', 'Tendência'), ('sentiment_change', 'Mudança de Sentimento'), ('volume_spike', 'Pico de Volume'), ('keyword_match', 'Palavra-chave Detectada'), ('source_offline', 'Fonte Offline')], max_length=20)),
                ('priority', models.CharField(choices=[('low', 'Baixa'), ('medium', 'Média'), ('high', 'Alta'), ('critical', 'Crítica')], default='medium', max_length=20)),
                ('is_active', models.BooleanField(default=True)),
                ('is_read', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('read_at', models.DateTimeField(blank=True, null=True)),
                ('articles', models.ManyToManyField(blank=True, to='core.article')),
                ('categories', models.ManyToManyField(blank=True, to='core.category')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='NewsSource',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('url', models.URLField(max_length=500)),
                ('source_type', models.CharField(choices=[('website', 'Website'), ('rss', 'RSS Feed'), ('api', 'API'), ('social', 'Social Media'), ('telegram', 'Telegram Channel')], default='website', max_length=20)),
                ('country', models.CharField(blank=True, max_length=3)),
                ('language', models.CharField(default='pt-BR', max_length=5)),
                ('is_active', models.BooleanField(default=True)),
                ('last_collection', models.DateTimeField(blank=True, null=True)),
                ('collection_interval', models.IntegerField(default=300)),
                ('max_articles', models.IntegerField(default=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('categories', models.ManyToManyField(blank=True, to='core.category')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='CollectionLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('success', 'Sucesso'), ('error', 'Erro'), ('partial', 'Parcial')], max_length=20)),
                ('articles_collected', models.IntegerField(default=0)),
                ('articles_processed', models.IntegerField(default=0)),
                ('errors', models.JSONField(blank=True, default=list)),
                ('processing_time', models.FloatField(blank=True, null=True)),
                ('started_at', models.DateTimeField(auto_now_add=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('source', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='collection_logs', to='core.newssource')),
            ],
            options={
                'ordering': ['-started_at'],
            },
        ),
        migrations.AddField(
            model_name='article',
            name='source',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='articles', to='core.newssource'),
        ),
        migrations.CreateModel(
            name='UserPreference',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('alert_types', models.JSONField(blank=True, default=list)),
                ('notification_email', models.BooleanField(default=True)),
                ('notification_telegram', models.BooleanField(default=False)),
                ('telegram_chat_id', models.CharField(blank=True, max_length=100)),
                ('language', models.CharField(default='pt-BR', max_length=5)),
                ('timezone', models.CharField(default='America/Sao_Paulo', max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('categories', models.ManyToManyField(blank=True, to='core.category')),
                ('sources', models.ManyToManyField(blank=True, to='core.newssource')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='preferences', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Analysis',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('analysis_type', models.CharField(choices=[('sentiment', 'Análise de Sentimento'), ('entities', 'Extração de Entidades'), ('keywords', 'Extração de Palavras-chave'), ('summary', 'Resumo Automático'), ('classification', 'Classificação'), ('ai_insight', 'Insight IA')], max_length=20)),
                ('result', models.JSONField()),
                ('confidence', models.FloatField(blank=True, null=True)),
                ('processing_time', models.FloatField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('article', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='analyses', to='core.article')),
            ],
            options={
                'ordering': ['-created_at'],
                'unique_together': {('article', 'analysis_type')},
            },
        ),
        migrations.AddIndex(
            model_name='article',
            index=models.Index(fields=['status', 'priority'], name='core_articl_status_83c6e5_idx'),
        ),
        migrations.AddIndex(
            model_name='article',
            index=models.Index(fields=['collected_date'], name='core_articl_collect_6530b2_idx'),
        ),
        migrations.AddIndex(
            model_name='article',
            index=models.Index(fields=['source', 'collected_date'], name='core_articl_source__b69902_idx'),
        ),
    ]
